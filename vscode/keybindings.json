// Place your key bindings in this file to override the defaultsauto[]
[
	{
		"key": "shift+cmd+r",
		"command": "code-runner.run"
	},
	{
		"key": "cmd+k",
		"command": "workbench.debug.panel.action.clearReplAction"
	},
	{
		"key": "shift+cmd+a",
		"command": "editor.action.formatDocument",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
	},
	{
		"key": "shift+alt+f",
		"command": "-editor.action.formatDocument",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
	},
	{
		"key": "shift+cmd+a",
		"command": "editor.action.formatDocument.none",
		"when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
	},
	{
		"key": "shift+alt+f",
		"command": "-editor.action.formatDocument.none",
		"when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
	},
	{
		"key": "shift+cmd+g",
		"command": "-workbench.action.terminal.navigateAccessibleBuffer",
		"when": "terminalAccessibleBufferFocus && terminalHasBeenCreated || terminalAccessibleBufferFocus && terminalProcessSupported"
	},
	{
		"key": "shift+cmd+g",
		"command": "-workbench.action.terminal.findPrevious",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+cmd+g",
		"command": "-editor.action.previousMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+g",
		"command": "git-graph.view"
	},
	{
		"key": "ctrl+shift+a",
		"command": "workbench.action.addRootFolder"
	},
	{
		"key": "shift+cmd+j",
		"command": "workbench.action.focusLeftGroup"
	},
	{
		"key": "cmd+k cmd+left",
		"command": "-workbench.action.focusLeftGroup"
	},
	{
		"key": "shift+cmd+k",
		"command": "workbench.action.focusRightGroup"
	},
	{
		"key": "cmd+k cmd+right",
		"command": "-workbench.action.focusRightGroup"
	},
	{
		"key": "shift+cmd+k",
		"command": "-editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "shift+cmd+j",
		"command": "-workbench.action.search.toggleQueryDetails",
		"when": "inSearchEditor || searchViewletFocus"
	},
	{
		"key": "ctrl+shift+a",
		"command": "-cursorLineStartSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+k",
		"command": "workbench.action.nextEditor",
		"when": "editorTextFocus && neovim.mode != insert"
	},
	{
		"key": "alt+cmd+right",
		"command": "-workbench.action.nextEditor"
	},
	{
		"key": "shift+j",
		"command": "workbench.action.previousEditor",
		"when": "neovim.mode != insert && editorTextFocus"
	},
	{
		"key": "alt+cmd+left",
		"command": "-workbench.action.previousEditor"
	},
	{
		"key": "shift+cmd+j",
		"command": "workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+cmd+left",
		"command": "-workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+cmd+k",
		"command": "workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+cmd+right",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+cmd+;",
		"command": "workbench.action.moveEditorToNextGroup"
	},
	{
		"key": "ctrl+cmd+right",
		"command": "-workbench.action.moveEditorToNextGroup"
	},
	{
		"key": "shift+cmd+h",
		"command": "-workbench.action.replaceInFiles"
	},
	{
		"key": "shift+cmd+h",
		"command": "workbench.action.moveEditorToPreviousGroup"
	},
	{
		"key": "ctrl+cmd+left",
		"command": "-workbench.action.moveEditorToPreviousGroup"
	},
	{
		"key": "shift+cmd+;",
		"command": "-breadcrumbs.focus",
		"when": "breadcrumbsPossible && breadcrumbsVisible"
	},
	{
		"key": "alt+cmd+left",
		"command": "workbench.action.previousEditor",
		"when": "editorTextFocus && vim.mode != 'Insert'"
	},
	{
		"key": "alt+cmd+left",
		"command": "workbench.action.previousEditor",
		"when": "editorTextFocus && vim.mode != 'Insert'"
	},
	{
		"key": "cmd+[",
		"command": "workbench.action.navigateBack",
		"when": "canNavigateBack"
	},
	{
		"key": "ctrl+-",
		"command": "-workbench.action.navigateBack",
		"when": "canNavigateBack"
	},
	{
		"key": "cmd+[",
		"command": "-editor.action.outdentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+]",
		"command": "-editor.action.indentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+]",
		"command": "workbench.action.navigateForward",
		"when": "canNavigateForward"
	},
	{
		"key": "ctrl+shift+-",
		"command": "-workbench.action.navigateForward",
		"when": "canNavigateForward"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+3",
    "command": "-workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+cmd+k",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "-workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+j",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "-workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "shift+k",
    "command": "list.expandSelectionUp",
    "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "shift+up",
    "command": "-list.expandSelectionUp",
    "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "shift+j",
    "command": "list.expandSelectionDown",
    "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "shift+down",
    "command": "-list.expandSelectionDown",
    "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "ctrl+shift+d",
    "command": "workbench.action.removeRootFolder"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "shift+cmd+i",
    "command": "-frontMatter.insertMedia",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+v",
    "command": "-frontMatter.insertSnippet",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+d",
    "command": "-frontMatter.dashboard"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.webview.reloadWebviewAction",
    "when": "activeWebviewPanelId == 'frontMatterDashboard'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "workbench.view.extension.figma"
  }
]
